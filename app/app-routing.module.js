"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var router_1 = require("nativescript-angular/router");
var materials_settings_component_1 = require("~/pages/materials-settings/materials-settings.component");
var materials_component_1 = require("~/pages/materials/materials.component");
var options_component_1 = require("~/pages/options/options.component");
var sizes_component_1 = require("~/pages/sizes/sizes.component");
var tabs_component_1 = require("~/pages/tabs.component");
var routes = [
    { path: "", redirectTo: "/login", pathMatch: "full" },
    { path: "login", loadChildren: "./pages/login/login.module#LoginModule" },
    { path: "settings", loadChildren: "./pages/settings/settings.module#SettingsModule" },
    { path: "busgo", loadChildren: "./pages/busgo/busgo.module#BusgoModule" },
    { path: "busback", loadChildren: "./pages/busback/busback.module#BusbackModule" },
    { path: "volpension", loadChildren: "./pages/volpension/volpension.module#VolpensionModule" },
    { path: "lodging", loadChildren: "./pages/lodging/lodging.module#LodgingModule" },
    { path: "bill", loadChildren: "./pages/bill/bill.module#BillModule" },
    { path: "bill/:customer_id", loadChildren: "./pages/bill-detail/billDetail.module#BillDetailModule" },
    { path: "tabs", component: tabs_component_1.TabsComponent, children: [
            { path: "materials", component: materials_component_1.MaterialsComponent },
            { path: "sizes", component: sizes_component_1.SizesComponent },
            { path: "options", component: options_component_1.OptionsComponent }
        ] },
    /*current fix to skip outlets*/
    { path: "materials/settings", component: materials_settings_component_1.MaterialsSettingsComponent }
];
var AppRoutingModule = /** @class */ (function () {
    function AppRoutingModule() {
    }
    AppRoutingModule = __decorate([
        core_1.NgModule({
            imports: [router_1.NativeScriptRouterModule.forRoot(routes)],
            exports: [router_1.NativeScriptRouterModule]
        })
    ], AppRoutingModule);
    return AppRoutingModule;
}());
exports.AppRoutingModule = AppRoutingModule;
exports.navigatableComponents = [
    tabs_component_1.TabsComponent,
    materials_component_1.MaterialsComponent,
    materials_settings_component_1.MaterialsSettingsComponent,
    sizes_component_1.SizesComponent,
    options_component_1.OptionsComponent
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwLXJvdXRpbmcubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiYXBwLXJvdXRpbmcubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsc0NBQXlDO0FBRXpDLHNEQUF1RTtBQUt2RSx3R0FBcUc7QUFDckcsNkVBQTJFO0FBQzNFLHVFQUFxRTtBQUNyRSxpRUFBK0Q7QUFDL0QseURBQXVEO0FBR3ZELElBQU0sTUFBTSxHQUFXO0lBQ25CLEVBQUUsSUFBSSxFQUFFLEVBQUUsRUFBRSxVQUFVLEVBQUUsUUFBUSxFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQUU7SUFDckQsRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFFLFlBQVksRUFBRSx3Q0FBd0MsRUFBRTtJQUN6RSxFQUFFLElBQUksRUFBRSxVQUFVLEVBQUUsWUFBWSxFQUFFLGlEQUFpRCxFQUFFO0lBQ3JGLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRSxZQUFZLEVBQUUsd0NBQXdDLEVBQUU7SUFDekUsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSw4Q0FBOEMsRUFBRTtJQUNqRixFQUFFLElBQUksRUFBRSxZQUFZLEVBQUUsWUFBWSxFQUFFLHVEQUF1RCxFQUFFO0lBQzdGLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsOENBQThDLEVBQUU7SUFDakYsRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLFlBQVksRUFBRSxxQ0FBcUMsRUFBRTtJQUNyRSxFQUFFLElBQUksRUFBRSxtQkFBbUIsRUFBRSxZQUFZLEVBQUUsd0RBQXdELEVBQUU7SUFDckcsRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLFNBQVMsRUFBRSw4QkFBYSxFQUFFLFFBQVEsRUFBRTtZQUM1QyxFQUFFLElBQUksRUFBRSxXQUFXLEVBQUUsU0FBUyxFQUFFLHdDQUFrQixFQUFFO1lBQ3BELEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRSxTQUFTLEVBQUUsZ0NBQWMsRUFBRTtZQUM1QyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsU0FBUyxFQUFFLG9DQUFnQixFQUFFO1NBQ25ELEVBQUU7SUFFUCwrQkFBK0I7SUFDL0IsRUFBRSxJQUFJLEVBQUUsb0JBQW9CLEVBQUUsU0FBUyxFQUFFLHlEQUEwQixFQUFFO0NBQ3hFLENBQUM7QUFNRjtJQUFBO0lBQWdDLENBQUM7SUFBcEIsZ0JBQWdCO1FBSjVCLGVBQVEsQ0FBQztZQUNOLE9BQU8sRUFBRSxDQUFDLGlDQUF3QixDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUNuRCxPQUFPLEVBQUUsQ0FBQyxpQ0FBd0IsQ0FBQztTQUN0QyxDQUFDO09BQ1csZ0JBQWdCLENBQUk7SUFBRCx1QkFBQztDQUFBLEFBQWpDLElBQWlDO0FBQXBCLDRDQUFnQjtBQUVoQixRQUFBLHFCQUFxQixHQUFHO0lBQ2pDLDhCQUFhO0lBQ2Isd0NBQWtCO0lBQ2xCLHlEQUEwQjtJQUMxQixnQ0FBYztJQUNkLG9DQUFnQjtDQUNuQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xyXG5pbXBvcnQgeyBSb3V0ZXMgfSBmcm9tIFwiQGFuZ3VsYXIvcm91dGVyXCI7XHJcbmltcG9ydCB7IE5hdGl2ZVNjcmlwdFJvdXRlck1vZHVsZSB9IGZyb20gXCJuYXRpdmVzY3JpcHQtYW5ndWxhci9yb3V0ZXJcIjtcclxuaW1wb3J0IHsgQmlsbENvbXBvbmVudCB9IGZyb20gXCJ+L3BhZ2VzL2JpbGwvYmlsbC5jb21wb25lbnRcIjtcclxuaW1wb3J0IHsgQnVzYmFja0NvbXBvbmVudCB9IGZyb20gXCJ+L3BhZ2VzL2J1c2JhY2svYnVzYmFjay5jb21wb25lbnRcIjtcclxuaW1wb3J0IHsgQnVzZ29Db21wb25lbnQgfSBmcm9tIFwifi9wYWdlcy9idXNnby9idXNnby5jb21wb25lbnRcIjtcclxuaW1wb3J0IHsgTG9kZ2luZ0NvbXBvbmVudCB9IGZyb20gXCJ+L3BhZ2VzL2xvZGdpbmcvbG9kZ2luZy5jb21wb25lbnRcIjtcclxuaW1wb3J0IHsgTWF0ZXJpYWxzU2V0dGluZ3NDb21wb25lbnQgfSBmcm9tIFwifi9wYWdlcy9tYXRlcmlhbHMtc2V0dGluZ3MvbWF0ZXJpYWxzLXNldHRpbmdzLmNvbXBvbmVudFwiO1xyXG5pbXBvcnQgeyBNYXRlcmlhbHNDb21wb25lbnQgfSBmcm9tIFwifi9wYWdlcy9tYXRlcmlhbHMvbWF0ZXJpYWxzLmNvbXBvbmVudFwiO1xyXG5pbXBvcnQgeyBPcHRpb25zQ29tcG9uZW50IH0gZnJvbSBcIn4vcGFnZXMvb3B0aW9ucy9vcHRpb25zLmNvbXBvbmVudFwiO1xyXG5pbXBvcnQgeyBTaXplc0NvbXBvbmVudCB9IGZyb20gXCJ+L3BhZ2VzL3NpemVzL3NpemVzLmNvbXBvbmVudFwiO1xyXG5pbXBvcnQgeyBUYWJzQ29tcG9uZW50IH0gZnJvbSBcIn4vcGFnZXMvdGFicy5jb21wb25lbnRcIjtcclxuaW1wb3J0IHsgVm9scGVuc2lvbkNvbXBvbmVudCB9IGZyb20gXCJ+L3BhZ2VzL3ZvbHBlbnNpb24vdm9scGVuc2lvbi5jb21wb25lbnRcIjtcclxuXHJcbmNvbnN0IHJvdXRlczogUm91dGVzID0gW1xyXG4gICAgeyBwYXRoOiBcIlwiLCByZWRpcmVjdFRvOiBcIi9sb2dpblwiLCBwYXRoTWF0Y2g6IFwiZnVsbFwiIH0sXHJcbiAgICB7IHBhdGg6IFwibG9naW5cIiwgbG9hZENoaWxkcmVuOiBcIi4vcGFnZXMvbG9naW4vbG9naW4ubW9kdWxlI0xvZ2luTW9kdWxlXCIgfSxcclxuICAgIHsgcGF0aDogXCJzZXR0aW5nc1wiLCBsb2FkQ2hpbGRyZW46IFwiLi9wYWdlcy9zZXR0aW5ncy9zZXR0aW5ncy5tb2R1bGUjU2V0dGluZ3NNb2R1bGVcIiB9LFxyXG4gICAgeyBwYXRoOiBcImJ1c2dvXCIsIGxvYWRDaGlsZHJlbjogXCIuL3BhZ2VzL2J1c2dvL2J1c2dvLm1vZHVsZSNCdXNnb01vZHVsZVwiIH0sXHJcbiAgICB7IHBhdGg6IFwiYnVzYmFja1wiLCBsb2FkQ2hpbGRyZW46IFwiLi9wYWdlcy9idXNiYWNrL2J1c2JhY2subW9kdWxlI0J1c2JhY2tNb2R1bGVcIiB9LFxyXG4gICAgeyBwYXRoOiBcInZvbHBlbnNpb25cIiwgbG9hZENoaWxkcmVuOiBcIi4vcGFnZXMvdm9scGVuc2lvbi92b2xwZW5zaW9uLm1vZHVsZSNWb2xwZW5zaW9uTW9kdWxlXCIgfSxcclxuICAgIHsgcGF0aDogXCJsb2RnaW5nXCIsIGxvYWRDaGlsZHJlbjogXCIuL3BhZ2VzL2xvZGdpbmcvbG9kZ2luZy5tb2R1bGUjTG9kZ2luZ01vZHVsZVwiIH0sXHJcbiAgICB7IHBhdGg6IFwiYmlsbFwiLCBsb2FkQ2hpbGRyZW46IFwiLi9wYWdlcy9iaWxsL2JpbGwubW9kdWxlI0JpbGxNb2R1bGVcIiB9LFxyXG4gICAgeyBwYXRoOiBcImJpbGwvOmN1c3RvbWVyX2lkXCIsIGxvYWRDaGlsZHJlbjogXCIuL3BhZ2VzL2JpbGwtZGV0YWlsL2JpbGxEZXRhaWwubW9kdWxlI0JpbGxEZXRhaWxNb2R1bGVcIiB9LFxyXG4gICAgeyBwYXRoOiBcInRhYnNcIiwgY29tcG9uZW50OiBUYWJzQ29tcG9uZW50LCBjaGlsZHJlbjogW1xyXG4gICAgICAgICAgICB7IHBhdGg6IFwibWF0ZXJpYWxzXCIsIGNvbXBvbmVudDogTWF0ZXJpYWxzQ29tcG9uZW50IH0sXHJcbiAgICAgICAgICAgIHsgcGF0aDogXCJzaXplc1wiLCBjb21wb25lbnQ6IFNpemVzQ29tcG9uZW50IH0sXHJcbiAgICAgICAgICAgIHsgcGF0aDogXCJvcHRpb25zXCIsIGNvbXBvbmVudDogT3B0aW9uc0NvbXBvbmVudCB9XHJcbiAgICAgICAgXSB9LFxyXG5cclxuICAgIC8qY3VycmVudCBmaXggdG8gc2tpcCBvdXRsZXRzKi9cclxuICAgIHsgcGF0aDogXCJtYXRlcmlhbHMvc2V0dGluZ3NcIiwgY29tcG9uZW50OiBNYXRlcmlhbHNTZXR0aW5nc0NvbXBvbmVudCB9XHJcbl07XHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gICAgaW1wb3J0czogW05hdGl2ZVNjcmlwdFJvdXRlck1vZHVsZS5mb3JSb290KHJvdXRlcyldLFxyXG4gICAgZXhwb3J0czogW05hdGl2ZVNjcmlwdFJvdXRlck1vZHVsZV1cclxufSlcclxuZXhwb3J0IGNsYXNzIEFwcFJvdXRpbmdNb2R1bGUgeyB9XHJcblxyXG5leHBvcnQgY29uc3QgbmF2aWdhdGFibGVDb21wb25lbnRzID0gW1xyXG4gICAgVGFic0NvbXBvbmVudCxcclxuICAgIE1hdGVyaWFsc0NvbXBvbmVudCxcclxuICAgIE1hdGVyaWFsc1NldHRpbmdzQ29tcG9uZW50LFxyXG4gICAgU2l6ZXNDb21wb25lbnQsXHJcbiAgICBPcHRpb25zQ29tcG9uZW50XHJcbl07XHJcbiJdfQ==